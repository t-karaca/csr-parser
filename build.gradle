plugins {
    id "java"
    id "org.springframework.boot" version "$springBootVersion"

    id "io.freefair.lombok" version "8.10.2"
    id "com.diffplug.spotless" version "6.25.0"
    id "com.github.node-gradle.node" version "7.1.0"
}

sourceCompatibility = 17

jar {
    // disable plain jar without bundled dependencies
    enabled = false
}

sourceSets {
    // Built frontend files will be output to 'build/frontend-resources/static'.
    // Adding 'build/frontend-resources' (without the static dir as Spring Boot expects the files in the static sub directory)
    // as a srcDir for main resources will include the files in the output jar at the correct location.
    main.resources.srcDirs += "$projectDir/build/frontend-resources"
}

node {
    version = "20.12.2"
    nodeProjectDir = file("$projectDir/frontend")
}

// make compileJava depend on the npm build, so the full build can be executed by just running 'gradle build'
compileJava.dependsOn(tasks.npm_run_build)

lombok {
    version = "1.18.34"
}

spotless {
    java {
        palantirJavaFormat "2.38.0"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"

    implementation 'org.bouncycastle:bcpkix-jdk18on:1.79'

    // Swagger UI
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0"

    // JSON logging
    implementation "ch.qos.logback.contrib:logback-json-classic:0.1.5"
    implementation "ch.qos.logback.contrib:logback-jackson:0.1.5"
    implementation "net.logstash.logback:logstash-logback-encoder:7.3"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.3"
    testImplementation "org.assertj:assertj-core:3.26.3"
    testImplementation "org.mockito:mockito-core:5.12.0"
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        showCauses = true
        showExceptions = true
        showStackTraces = true
        exceptionFormat = "full"
        events "passed", "failed", "skipped"
    }
}

